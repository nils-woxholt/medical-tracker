openapi: 3.1.0
info:
  title: SaaS Medical Tracker
  description: Track medications, log symptoms, and manage your health data securely
  version: 1.0.0
paths:
  /metrics:
    get:
      tags:
      - monitoring
      summary: Prometheus Metrics
      description: Prometheus-compatible metrics endpoint for monitoring and alerting
      operationId: metrics_endpoint_metrics_get
      responses:
        '200':
          description: Successful Response
  /conditions:
    post:
      tags:
      - Medical Context (root)
      - conditions
      summary: Create condition
      description: Create a new medical condition for the authenticated user
      operationId: create_condition_conditions_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Medical Context (root)
      - conditions
      summary: List conditions
      description: Get all conditions for the authenticated user
      operationId: list_conditions_conditions_get
      security:
      - HTTPBearer: []
      parameters:
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Only return active conditions
          default: false
          title: Active Only
        description: Only return active conditions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionResponse'
                title: Response List Conditions Conditions Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /conditions/{condition_id}:
    get:
      tags:
      - Medical Context (root)
      - conditions
      summary: Get condition
      description: Get a specific condition by ID
      operationId: get_condition_conditions__condition_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Medical Context (root)
      - conditions
      summary: Update condition
      description: Update a specific condition
      operationId: update_condition_conditions__condition_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Medical Context (root)
      - conditions
      summary: Delete condition
      description: Delete (deactivate) a specific condition
      operationId: delete_condition_conditions__condition_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /doctors:
    post:
      tags:
      - Medical Context (root)
      - doctors
      summary: Create doctor
      description: Create a new doctor record for the authenticated user
      operationId: create_doctor_doctors_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Medical Context (root)
      - doctors
      summary: List doctors
      description: Get all doctors for the authenticated user
      operationId: list_doctors_doctors_get
      security:
      - HTTPBearer: []
      parameters:
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Only return active doctors
          default: false
          title: Active Only
        description: Only return active doctors
      - name: specialty
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specialty
          title: Specialty
        description: Filter by specialty
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorResponse'
                title: Response List Doctors Doctors Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /doctors/{doctor_id}:
    get:
      tags:
      - Medical Context (root)
      - doctors
      summary: Get doctor
      description: Get a specific doctor by ID
      operationId: get_doctor_doctors__doctor_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Medical Context (root)
      - doctors
      summary: Update doctor
      description: Update a specific doctor
      operationId: update_doctor_doctors__doctor_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Medical Context (root)
      - doctors
      summary: Delete doctor
      description: Delete (deactivate) a specific doctor
      operationId: delete_doctor_doctors__doctor_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /doctors/link-condition:
    post:
      tags:
      - Medical Context (root)
      - doctors
      - conditions
      summary: Link doctor to condition
      description: Create a link between a doctor and a condition
      operationId: link_doctor_to_condition_doctors_link_condition_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorConditionLinkCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorConditionLinkResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /doctors/{doctor_id}/conditions/{condition_id}:
    delete:
      tags:
      - Medical Context (root)
      - doctors
      - conditions
      summary: Unlink doctor from condition
      description: Remove the link between a doctor and a condition
      operationId: unlink_doctor_from_condition_doctors__doctor_id__conditions__condition_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /passport:
    get:
      tags:
      - Medical Context (root)
      - passport
      summary: Get medical passport
      description: Get aggregated view of conditions with linked doctors (list of
        items)
      operationId: get_passport_passport_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PassportItem'
                type: array
                title: Response Get Passport Passport Get
      security:
      - HTTPBearer: []
  /medications/:
    post:
      tags:
      - Medications (root)
      - medications
      summary: Create new medication
      description: Create a new medication in the master data list. Medication names
        must be unique.
      operationId: create_medication_medications__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationCreate'
      responses:
        '201':
          description: Medication created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
      - Medications (root)
      - medications
      summary: List medications
      description: Get paginated list of medications with optional search and filtering
      operationId: list_medications_medications__get
      security:
      - HTTPBearer: []
      parameters:
      - name: search
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search term for medication name or description
          title: Search
        description: Search term for medication name or description
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Filter to only active medications
          default: true
          title: Active Only
        description: Filter to only active medications
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number for pagination
          default: 1
          title: Page
        description: Page number for pagination
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Number of items per page (1-100)
          default: 10
          title: Per Page
        description: Number of items per page (1-100)
      responses:
        '200':
          description: List of medications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationListResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /medications/active:
    get:
      tags:
      - Medications (root)
      - medications
      summary: Get active medications
      description: Get all active medications for selection lists (no pagination)
      operationId: get_active_medications_medications_active_get
      responses:
        '200':
          description: Active medications retrieved successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MedicationPublic'
                type: array
                title: Response Get Active Medications Medications Active Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - HTTPBearer: []
  /medications/search:
    get:
      tags:
      - Medications (root)
      - medications
      summary: Search medications
      description: Search medications by name or description
      operationId: search_medications_medications_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
          minLength: 1
          description: Search query
          title: Q
        description: Search query
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Include only active medications
          default: true
          title: Active Only
        description: Include only active medications
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationPublic'
                title: Response Search Medications Medications Search Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /medications/stats:
    get:
      tags:
      - Medications (root)
      - medications
      summary: Get medication statistics
      description: Get statistics about medications in the system
      operationId: get_medication_stats_medications_stats_get
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Get Medication Stats Medications Stats Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - HTTPBearer: []
  /medications/{medication_id}:
    get:
      tags:
      - Medications (root)
      - medications
      summary: Get medication by ID
      description: Retrieve a specific medication by its ID
      operationId: get_medication_medications__medication_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Medications (root)
      - medications
      summary: Update medication
      description: Update an existing medication
      operationId: update_medication_medications__medication_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationUpdate'
      responses:
        '200':
          description: Medication updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication name already exists or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Medications (root)
      - medications
      summary: Delete medication
      description: Permanently delete a medication (hard delete). Use with caution.
      operationId: delete_medication_medications__medication_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '204':
          description: Medication deleted successfully
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Cannot delete medication (referenced by logs)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /medications/{medication_id}/deactivate:
    patch:
      tags:
      - Medications (root)
      - medications
      summary: Deactivate medication
      description: Deactivate a medication (soft delete). Deactivated medications
        won't appear in active lists.
      operationId: deactivate_medication_medications__medication_id__deactivate_patch
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication deactivated successfully (returns full medication)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication already deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /medications/{medication_id}/activate:
    patch:
      tags:
      - Medications (root)
      - medications
      summary: Reactivate medication
      description: Reactivate a previously deactivated medication
      operationId: reactivate_medication_medications__medication_id__activate_patch
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication reactivated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /medications/validate:
    post:
      tags:
      - Medications (root)
      - medications
      summary: Validate medication name
      description: Validate if a medication name exists and is optionally active
      operationId: validate_medication_name_medications_validate_post
      security:
      - HTTPBearer: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
          description: Medication name to validate
          title: Name
        description: Medication name to validate
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Check only active medications
          default: true
          title: Active Only
        description: Check only active medications
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Validate Medication Name Medications Validate Post
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /logs/medications:
    post:
      tags:
      - Logs (root, legacy)
      summary: Create Medication Log Minimal
      operationId: create_medication_log_minimal_logs_medications_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationLogCreateMinimal'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Logs (root, legacy)
      summary: List Medication Logs Minimal
      operationId: list_medication_logs_minimal_logs_medications_get
      security:
      - HTTPBearer: []
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationLogResponseMinimal'
                title: Response List Medication Logs Minimal Logs Medications Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/medications/{log_id}:
    get:
      tags:
      - Logs (root, legacy)
      summary: Get Medication Log Minimal
      operationId: get_medication_log_minimal_logs_medications__log_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: log_id
        in: path
        required: true
        schema:
          type: integer
          title: Log Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/symptoms:
    post:
      tags:
      - Logs (root, legacy)
      summary: Create Symptom Log Minimal
      operationId: create_symptom_log_minimal_logs_symptoms_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomLogCreateMinimal'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Logs (root, legacy)
      summary: List Symptom Logs Minimal
      operationId: list_symptom_logs_minimal_logs_symptoms_get
      security:
      - HTTPBearer: []
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SymptomLogResponseMinimal'
                title: Response List Symptom Logs Minimal Logs Symptoms Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs/summary:
    get:
      tags:
      - Logs (root, legacy)
      summary: Logs Summary Minimal
      operationId: logs_summary_minimal_logs_summary_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Logs Summary Minimal Logs Summary Get
      security:
      - HTTPBearer: []
  /auth/login:
    post:
      tags:
      - Auth (root)
      - auth
      summary: Login
      operationId: login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__api__auth__login__UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/logout:
    post:
      tags:
      - Auth (root)
      - auth
      summary: Logout
      description: 'Logout current session.


        session_id may be injected by middleware into endpoint dependencies (e.g.
        request.state).

        For now we accept a direct parameter for simplified flow.'
      operationId: logout_auth_logout_post
      parameters:
      - name: session_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Session Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/register:
    post:
      tags:
      - Auth (root)
      - auth
      summary: Register
      operationId: register_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app__api__auth__register__UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/session:
    get:
      tags:
      - Auth (root)
      - auth
      summary: Session Status
      operationId: session_status_auth_session_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatusResponse'
  /auth/demo:
    post:
      tags:
      - Auth (root)
      - auth
      summary: Start Demo
      operationId: start_demo_auth_demo_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoResponse'
  /api/v1/health:
    get:
      summary: Health Check
      description: "Health check endpoint for service monitoring.\n\nReturns:\n  \
        \  HealthCheckResponse: Service health status"
      operationId: health_check_api_v1_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /api/v1/health/ready:
    get:
      summary: Readiness Check
      description: "Kubernetes readiness probe endpoint.\n\nReturns:\n    Dict: Readiness\
        \ status"
      operationId: readiness_check_api_v1_health_ready_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Readiness Check Api V1 Health Ready Get
  /api/v1/health/live:
    get:
      summary: Liveness Check
      description: "Kubernetes liveness probe endpoint.\n\nReturns:\n    Dict: Liveness\
        \ status"
      operationId: liveness_check_api_v1_health_live_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Liveness Check Api V1 Health Live Get
  /api/v1/metrics:
    get:
      summary: Metrics
      description: 'Basic metrics endpoint without external psutil dependency.


        Tests only assert presence of top-level keys and (optionally) some system

        metrics. We''ll attempt psutil import; if unavailable, we gracefully fall

        back to a minimal payload so the endpoint never raises ModuleNotFoundError.'
      operationId: metrics_api_v1_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Metrics Api V1 Metrics Get
  /api/v1/info:
    get:
      summary: Api Info
      description: "Get API information and configuration.\n\nReturns basic information\
        \ about the API for discovery purposes.\n\nReturns:\n    Dict: API information"
      operationId: api_info_api_v1_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Api Info Api V1 Info Get
  /api/v1/logs/medications:
    post:
      summary: Create Medication Log Minimal
      operationId: create_medication_log_minimal_api_v1_logs_medications_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationLogCreateMinimal'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: List Medication Logs Minimal
      operationId: list_medication_logs_minimal_api_v1_logs_medications_get
      security:
      - HTTPBearer: []
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationLogResponseMinimal'
                title: Response List Medication Logs Minimal Api V1 Logs Medications
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/logs/medications/{log_id}:
    get:
      summary: Get Medication Log Minimal
      operationId: get_medication_log_minimal_api_v1_logs_medications__log_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: log_id
        in: path
        required: true
        schema:
          type: integer
          title: Log Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/logs/symptoms:
    post:
      summary: Create Symptom Log Minimal
      operationId: create_symptom_log_minimal_api_v1_logs_symptoms_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomLogCreateMinimal'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLogResponseMinimal'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: List Symptom Logs Minimal
      operationId: list_symptom_logs_minimal_api_v1_logs_symptoms_get
      security:
      - HTTPBearer: []
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SymptomLogResponseMinimal'
                title: Response List Symptom Logs Minimal Api V1 Logs Symptoms Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/logs/summary:
    get:
      summary: Logs Summary Minimal
      operationId: logs_summary_minimal_api_v1_logs_summary_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Logs Summary Minimal Api V1 Logs Summary Get
      security:
      - HTTPBearer: []
  /api/v1/users/me:
    get:
      tags:
      - Users
      summary: Get Current User Placeholder
      operationId: get_current_user_placeholder_api_v1_users_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
    put:
      tags:
      - Users
      summary: Update Current User Placeholder
      operationId: update_current_user_placeholder_api_v1_users_me_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/medications/:
    post:
      tags:
      - medications
      summary: Create new medication
      description: Create a new medication in the master data list. Medication names
        must be unique.
      operationId: create_medication_api_v1_medications__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationCreate'
      responses:
        '201':
          description: Medication created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
      - medications
      summary: List medications
      description: Get paginated list of medications with optional search and filtering
      operationId: list_medications_api_v1_medications__get
      security:
      - HTTPBearer: []
      parameters:
      - name: search
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search term for medication name or description
          title: Search
        description: Search term for medication name or description
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Filter to only active medications
          default: true
          title: Active Only
        description: Filter to only active medications
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number for pagination
          default: 1
          title: Page
        description: Page number for pagination
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Number of items per page (1-100)
          default: 10
          title: Per Page
        description: Number of items per page (1-100)
      responses:
        '200':
          description: List of medications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationListResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/medications/active:
    get:
      tags:
      - medications
      summary: Get active medications
      description: Get all active medications for selection lists (no pagination)
      operationId: get_active_medications_api_v1_medications_active_get
      responses:
        '200':
          description: Active medications retrieved successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MedicationPublic'
                type: array
                title: Response Get Active Medications Api V1 Medications Active Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - HTTPBearer: []
  /api/v1/medications/search:
    get:
      tags:
      - medications
      summary: Search medications
      description: Search medications by name or description
      operationId: search_medications_api_v1_medications_search_get
      security:
      - HTTPBearer: []
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
          minLength: 1
          description: Search query
          title: Q
        description: Search query
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Include only active medications
          default: true
          title: Active Only
        description: Include only active medications
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationPublic'
                title: Response Search Medications Api V1 Medications Search Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/medications/stats:
    get:
      tags:
      - medications
      summary: Get medication statistics
      description: Get statistics about medications in the system
      operationId: get_medication_stats_api_v1_medications_stats_get
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Get Medication Stats Api V1 Medications Stats Get
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - HTTPBearer: []
  /api/v1/medications/{medication_id}:
    get:
      tags:
      - medications
      summary: Get medication by ID
      description: Retrieve a specific medication by its ID
      operationId: get_medication_api_v1_medications__medication_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - medications
      summary: Update medication
      description: Update an existing medication
      operationId: update_medication_api_v1_medications__medication_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationUpdate'
      responses:
        '200':
          description: Medication updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication name already exists or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - medications
      summary: Delete medication
      description: Permanently delete a medication (hard delete). Use with caution.
      operationId: delete_medication_api_v1_medications__medication_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '204':
          description: Medication deleted successfully
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Cannot delete medication (referenced by logs)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/medications/{medication_id}/deactivate:
    patch:
      tags:
      - medications
      summary: Deactivate medication
      description: Deactivate a medication (soft delete). Deactivated medications
        won't appear in active lists.
      operationId: deactivate_medication_api_v1_medications__medication_id__deactivate_patch
      security:
      - HTTPBearer: []
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication deactivated successfully (returns full medication)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Medication already deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/medications/{medication_id}/activate:
    patch:
      tags:
      - medications
      summary: Reactivate medication
      description: Reactivate a previously deactivated medication
      operationId: reactivate_medication_api_v1_medications__medication_id__activate_patch
      parameters:
      - name: medication_id
        in: path
        required: true
        schema:
          type: integer
          title: Medication Id
      responses:
        '200':
          description: Medication reactivated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationResponse'
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/medications/validate:
    post:
      tags:
      - medications
      summary: Validate medication name
      description: Validate if a medication name exists and is optionally active
      operationId: validate_medication_name_api_v1_medications_validate_post
      security:
      - HTTPBearer: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
          description: Medication name to validate
          title: Name
        description: Medication name to validate
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Check only active medications
          default: true
          title: Active Only
        description: Check only active medications
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Validate Medication Name Api V1 Medications Validate
                  Post
        '404':
          description: Medication not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/symptoms/:
    get:
      tags:
      - Symptoms
      summary: List Symptom Logs
      description: List user symptom logs - placeholder.
      operationId: list_symptom_logs_api_v1_symptoms__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
    post:
      tags:
      - Symptoms
      summary: Create Symptom Log
      description: Create new symptom log - placeholder.
      operationId: create_symptom_log_api_v1_symptoms__post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/feel-vs-yesterday:
    get:
      tags:
      - Feel Analysis
      summary: Feel vs yesterday analysis
      description: Analyze how the user feels today compared to yesterday based on
        medication and symptom logs
      operationId: feel_vs_yesterday_api_v1_feel_vs_yesterday_get
      security:
      - HTTPBearer: []
      parameters:
      - name: target_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: 'Date to compare against (defaults to today). Format: YYYY-MM-DDTHH:MM:SS'
          title: Target Date
        description: 'Date to compare against (defaults to today). Format: YYYY-MM-DDTHH:MM:SS'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeelVsYesterdayResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/feel-vs-yesterday/history:
    get:
      tags:
      - Feel Analysis
      summary: Feel vs yesterday history
      description: Get feel vs yesterday analysis for multiple days
      operationId: feel_vs_yesterday_history_api_v1_feel_vs_yesterday_history_get
      security:
      - HTTPBearer: []
      parameters:
      - name: days
        in: query
        required: false
        schema:
          type: integer
          maximum: 30
          minimum: 1
          description: Number of days to analyze (1-30)
          default: 7
          title: Days
        description: Number of days to analyze (1-30)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeelVsYesterdayResponse'
                title: Response Feel Vs Yesterday History Api V1 Feel Vs Yesterday
                  History Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/feel-vs-yesterday/health:
    get:
      tags:
      - Feel Analysis
      summary: Feel service health check
      description: Check if the feel vs yesterday service is working correctly
      operationId: feel_service_health_check_api_v1_feel_vs_yesterday_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Feel Service Health Check Api V1 Feel Vs Yesterday
                  Health Get
  /api/v1/conditions:
    post:
      tags:
      - Medical Context
      - conditions
      summary: Create condition
      description: Create a new medical condition for the authenticated user
      operationId: create_condition_api_v1_conditions_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Medical Context
      - conditions
      summary: List conditions
      description: Get all conditions for the authenticated user
      operationId: list_conditions_api_v1_conditions_get
      security:
      - HTTPBearer: []
      parameters:
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Only return active conditions
          default: false
          title: Active Only
        description: Only return active conditions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConditionResponse'
                title: Response List Conditions Api V1 Conditions Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/conditions/{condition_id}:
    get:
      tags:
      - Medical Context
      - conditions
      summary: Get condition
      description: Get a specific condition by ID
      operationId: get_condition_api_v1_conditions__condition_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Medical Context
      - conditions
      summary: Update condition
      description: Update a specific condition
      operationId: update_condition_api_v1_conditions__condition_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Medical Context
      - conditions
      summary: Delete condition
      description: Delete (deactivate) a specific condition
      operationId: delete_condition_api_v1_conditions__condition_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/doctors:
    post:
      tags:
      - Medical Context
      - doctors
      summary: Create doctor
      description: Create a new doctor record for the authenticated user
      operationId: create_doctor_api_v1_doctors_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Medical Context
      - doctors
      summary: List doctors
      description: Get all doctors for the authenticated user
      operationId: list_doctors_api_v1_doctors_get
      security:
      - HTTPBearer: []
      parameters:
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Only return active doctors
          default: false
          title: Active Only
        description: Only return active doctors
      - name: specialty
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by specialty
          title: Specialty
        description: Filter by specialty
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorResponse'
                title: Response List Doctors Api V1 Doctors Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/doctors/{doctor_id}:
    get:
      tags:
      - Medical Context
      - doctors
      summary: Get doctor
      description: Get a specific doctor by ID
      operationId: get_doctor_api_v1_doctors__doctor_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - Medical Context
      - doctors
      summary: Update doctor
      description: Update a specific doctor
      operationId: update_doctor_api_v1_doctors__doctor_id__patch
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Medical Context
      - doctors
      summary: Delete doctor
      description: Delete (deactivate) a specific doctor
      operationId: delete_doctor_api_v1_doctors__doctor_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/doctors/link-condition:
    post:
      tags:
      - Medical Context
      - doctors
      - conditions
      summary: Link doctor to condition
      description: Create a link between a doctor and a condition
      operationId: link_doctor_to_condition_api_v1_doctors_link_condition_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorConditionLinkCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorConditionLinkResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/doctors/{doctor_id}/conditions/{condition_id}:
    delete:
      tags:
      - Medical Context
      - doctors
      - conditions
      summary: Unlink doctor from condition
      description: Remove the link between a doctor and a condition
      operationId: unlink_doctor_from_condition_api_v1_doctors__doctor_id__conditions__condition_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
          title: Doctor Id
      - name: condition_id
        in: path
        required: true
        schema:
          type: string
          title: Condition Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/passport:
    get:
      tags:
      - Medical Context
      - passport
      summary: Get medical passport
      description: Get aggregated view of conditions with linked doctors (list of
        items)
      operationId: get_passport_api_v1_passport_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PassportItem'
                type: array
                title: Response Get Passport Api V1 Passport Get
      security:
      - HTTPBearer: []
components:
  schemas:
    ConditionCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Condition name
          examples:
          - Hypertension
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Optional condition description
          examples:
          - High blood pressure requiring regular monitoring
        is_active:
          type: boolean
          title: Is Active
          description: Whether the condition is active and being tracked
          default: true
          examples:
          - true
      type: object
      required:
      - name
      title: ConditionCreate
      description: Schema for creating a new condition.
    ConditionResponse:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Condition name
          examples:
          - Hypertension
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Optional condition description
          examples:
          - High blood pressure requiring regular monitoring
        is_active:
          type: boolean
          title: Is Active
          description: Whether the condition is active and being tracked
          default: true
          examples:
          - true
        id:
          type: string
          title: Id
          description: Unique condition identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440000
        user_id:
          type: string
          title: User Id
          description: ID of the user who owns this condition
          examples:
          - user-uuid-123
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Timestamp when condition was created
          examples:
          - '2024-01-15T10:30:00Z'
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Timestamp when condition was last updated
          examples:
          - '2024-01-15T10:30:00Z'
      type: object
      required:
      - name
      - id
      - user_id
      - created_at
      - updated_at
      title: ConditionResponse
      description: Schema for condition API responses.
    ConditionUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 2
          - type: 'null'
          title: Name
          description: Updated condition name
          examples:
          - Hypertension
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Updated condition description
          examples:
          - High blood pressure requiring regular monitoring
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
          description: Whether the condition is active and being tracked
          examples:
          - true
      type: object
      title: ConditionUpdate
      description: Schema for updating an existing condition.
    DemoResponse:
      properties:
        data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Error
      type: object
      title: DemoResponse
    DoctorConditionLinkCreate:
      properties:
        doctor_id:
          type: string
          title: Doctor Id
          description: Doctor identifier to link
          examples:
          - 550e8400-e29b-41d4-a716-446655440001
        condition_id:
          type: string
          title: Condition Id
          description: Condition identifier to link
          examples:
          - 550e8400-e29b-41d4-a716-446655440000
      type: object
      required:
      - doctor_id
      - condition_id
      title: DoctorConditionLinkCreate
      description: Schema for linking a doctor to a condition.
    DoctorConditionLinkResponse:
      properties:
        doctor_id:
          type: string
          title: Doctor Id
          description: Doctor identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440001
        condition_id:
          type: string
          title: Condition Id
          description: Condition identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440000
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Timestamp when link was created
          examples:
          - '2024-01-15T10:30:00Z'
      type: object
      required:
      - doctor_id
      - condition_id
      - created_at
      title: DoctorConditionLinkResponse
      description: Schema for doctor-condition link responses.
    DoctorCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Doctor's full name
          examples:
          - Dr. Sarah Johnson
        specialty:
          type: string
          maxLength: 100
          minLength: 2
          title: Specialty
          description: Doctor's medical specialty
          examples:
          - Cardiology
        contact_info:
          anyOf:
          - type: string
            maxLength: 200
          - type: 'null'
          title: Contact Info
          description: Doctor's contact information (email, phone, etc.)
          examples:
          - sarah.johnson@heartcenter.com
        is_active:
          type: boolean
          title: Is Active
          description: Whether the doctor is active in practice
          default: true
          examples:
          - true
      type: object
      required:
      - name
      - specialty
      title: DoctorCreate
      description: Schema for creating a new doctor.
    DoctorResponse:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Doctor's full name
          examples:
          - Dr. Sarah Johnson
        specialty:
          type: string
          maxLength: 100
          minLength: 2
          title: Specialty
          description: Doctor's medical specialty
          examples:
          - Cardiology
        contact_info:
          anyOf:
          - type: string
            maxLength: 200
          - type: 'null'
          title: Contact Info
          description: Doctor's contact information (email, phone, etc.)
          examples:
          - sarah.johnson@heartcenter.com
        is_active:
          type: boolean
          title: Is Active
          description: Whether the doctor is active in practice
          default: true
          examples:
          - true
        id:
          type: string
          title: Id
          description: Unique doctor identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440001
        user_id:
          type: string
          title: User Id
          description: ID of the user who owns this doctor record
          examples:
          - user-uuid-123
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Timestamp when doctor was created
          examples:
          - '2024-01-15T10:30:00Z'
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Timestamp when doctor was last updated
          examples:
          - '2024-01-15T10:30:00Z'
      type: object
      required:
      - name
      - specialty
      - id
      - user_id
      - created_at
      - updated_at
      title: DoctorResponse
      description: Schema for doctor API responses.
    DoctorUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 2
          - type: 'null'
          title: Name
          description: Updated doctor name
          examples:
          - Dr. Sarah Johnson
        specialty:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 2
          - type: 'null'
          title: Specialty
          description: Updated specialty
          examples:
          - Cardiology
        contact_info:
          anyOf:
          - type: string
            maxLength: 200
          - type: 'null'
          title: Contact Info
          description: Updated contact information
          examples:
          - sarah.johnson@heartcenter.com
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
          description: Whether the doctor is active in practice
          examples:
          - true
      type: object
      title: DoctorUpdate
      description: Schema for updating an existing doctor.
    ErrorResponse:
      properties:
        detail:
          type: string
          title: Detail
          description: Error description
        error_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Code
          description: Optional error code
      type: object
      required:
      - detail
      title: ErrorResponse
      description: Standard error response schema.
    FeelVsYesterdayResponse:
      properties:
        status:
          type: string
          title: Status
          description: 'Overall feeling status: ''better'', ''same'', ''worse'', ''unknown'''
        confidence:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Confidence
          description: Confidence score for the status (0.0 to 1.0)
        summary:
          type: string
          title: Summary
          description: Human-readable summary of the comparison
        details:
          additionalProperties: true
          type: object
          title: Details
          description: Detailed breakdown of the analysis
        date_compared:
          type: string
          title: Date Compared
          description: Date being compared (YYYY-MM-DD format)
      type: object
      required:
      - status
      - confidence
      - summary
      - date_compared
      title: FeelVsYesterdayResponse
      description: Schema for feel vs yesterday comparison.
      example:
        confidence: 0.75
        date_compared: '2025-10-15'
        details:
          medication_effectiveness_change: 0.3
          symptom_count_change: -1
          symptom_severity_change: -0.5
        status: better
        summary: Feeling better today - fewer symptoms and medications were more effective
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheckResponse:
      properties:
        status:
          type: string
          title: Status
          description: Service status
          examples:
          - healthy
        timestamp:
          type: string
          format: date-time
          title: Timestamp
          description: Health check timestamp
          examples:
          - '2023-12-01T10:00:00Z'
        version:
          type: string
          title: Version
          description: Application version
          examples:
          - 1.0.0
        database:
          type: boolean
          title: Database
          description: Database connectivity status
          examples:
          - true
      type: object
      required:
      - status
      - timestamp
      - version
      - database
      title: HealthCheckResponse
      description: Response schema for health check endpoints.
    LoginRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          title: Password
      type: object
      required:
      - email
      - password
      title: LoginRequest
    MedicationCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Medication name (must be unique)
          example: Aspirin
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Optional medication description
          example: Pain reliever and anti-inflammatory medication
        is_active:
          type: boolean
          title: Is Active
          description: Whether the medication is active (defaults to True for new
            medications)
          default: true
      type: object
      required:
      - name
      title: MedicationCreate
      description: Schema for creating a new medication.
    MedicationListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/MedicationResponse'
          type: array
          title: Items
          description: List of medications
          example: []
        total:
          type: integer
          title: Total
          description: Total number of medications matching filters
          example: 10
        page:
          type: integer
          title: Page
          description: Current page number
          example: 1
        per_page:
          type: integer
          title: Per Page
          description: Number of items per page
          example: 10
        pages:
          type: integer
          title: Pages
          description: Total number of pages
          example: 1
      type: object
      required:
      - items
      - total
      - page
      - per_page
      - pages
      title: MedicationListResponse
      description: Response schema for paginated medication list.
    MedicationLogCreateMinimal:
      properties:
        medication_name:
          type: string
          minLength: 1
          title: Medication Name
        dosage:
          anyOf:
          - type: string
          - type: 'null'
          title: Dosage
          description: Dosage string e.g. '200mg'
        taken_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Taken At
          description: Time medication taken
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        effectiveness_rating:
          anyOf:
          - type: integer
            maximum: 5.0
            minimum: 1.0
          - type: 'null'
          title: Effectiveness Rating
      type: object
      required:
      - medication_name
      title: MedicationLogCreateMinimal
    MedicationLogResponseMinimal:
      properties:
        id:
          type: integer
          title: Id
        user_id:
          type: string
          title: User Id
        medication_name:
          type: string
          title: Medication Name
        dosage:
          anyOf:
          - type: string
          - type: 'null'
          title: Dosage
        taken_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Taken At
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        effectiveness_rating:
          anyOf:
          - type: integer
          - type: 'null'
          title: Effectiveness Rating
        logged_at:
          type: string
          format: date-time
          title: Logged At
      type: object
      required:
      - id
      - user_id
      - medication_name
      - logged_at
      title: MedicationLogResponseMinimal
    MedicationPublic:
      properties:
        id:
          type: integer
          title: Id
          description: Unique medication identifier
          example: 1
        name:
          type: string
          title: Name
          description: Medication name
          example: Aspirin
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Medication description
          example: Pain reliever and anti-inflammatory medication
        is_active:
          type: boolean
          title: Is Active
          description: Whether medication is active
          example: true
      type: object
      required:
      - id
      - name
      - description
      - is_active
      title: MedicationPublic
      description: Public medication schema (excludes audit fields).
    MedicationResponse:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 2
          title: Name
          description: Medication name (must be unique)
          example: Aspirin
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Optional medication description
          example: Pain reliever and anti-inflammatory medication
        is_active:
          type: boolean
          title: Is Active
          description: Whether the medication is active and available for logging
          default: true
          example: true
        id:
          type: integer
          title: Id
          description: Unique medication identifier
          example: 1
        created_at:
          type: string
          format: date-time
          title: Created At
          description: When the medication was created
          example: '2023-01-01T10:00:00Z'
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: When the medication was last updated
          example: '2023-01-01T10:00:00Z'
      type: object
      required:
      - name
      - id
      - created_at
      - updated_at
      title: MedicationResponse
      description: Schema for medication response with all fields.
    MedicationUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 2
          - type: 'null'
          title: Name
          description: Updated medication name
        description:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Description
          description: Updated medication description
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
          description: Updated active status
      type: object
      title: MedicationUpdate
      description: Schema for updating an existing medication.
    PassportConditionItem:
      properties:
        id:
          type: string
          title: Id
          description: Condition identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440000
        name:
          type: string
          title: Name
          description: Condition name
          examples:
          - Hypertension
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Condition description
          examples:
          - High blood pressure requiring regular monitoring
        is_active:
          type: boolean
          title: Is Active
          description: Whether the condition is active
          examples:
          - true
        created_at:
          type: string
          format: date-time
          title: Created At
          description: When the condition was created
          examples:
          - '2024-01-15T10:30:00Z'
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: When the condition was last updated
          examples:
          - '2024-01-15T10:30:00Z'
      type: object
      required:
      - id
      - name
      - is_active
      - created_at
      - updated_at
      title: PassportConditionItem
      description: Schema for a condition item in the passport response.
    PassportDoctorItem:
      properties:
        id:
          type: string
          title: Id
          description: Doctor identifier
          examples:
          - 550e8400-e29b-41d4-a716-446655440001
        name:
          type: string
          title: Name
          description: Doctor name
          examples:
          - Dr. Sarah Johnson
        specialty:
          type: string
          title: Specialty
          description: Doctor specialty
          examples:
          - Cardiology
        contact_info:
          anyOf:
          - type: string
          - type: 'null'
          title: Contact Info
          description: Doctor contact information
          examples:
          - sarah.johnson@heartcenter.com
        is_active:
          type: boolean
          title: Is Active
          description: Whether the doctor is active
          examples:
          - true
      type: object
      required:
      - id
      - name
      - specialty
      - is_active
      title: PassportDoctorItem
      description: Schema for a doctor item in the passport response.
    PassportItem:
      properties:
        condition:
          $ref: '#/components/schemas/PassportConditionItem'
          description: The medical condition
        doctors:
          items:
            $ref: '#/components/schemas/PassportDoctorItem'
          type: array
          title: Doctors
          description: List of doctors linked to this condition
          examples:
          - []
      type: object
      required:
      - condition
      - doctors
      title: PassportItem
      description: Schema for a passport item containing condition and linked doctors.
    RegisterRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          title: Password
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      type: object
      required:
      - email
      - password
      title: RegisterRequest
    SessionStatusResponse:
      properties:
        data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Error
      type: object
      title: SessionStatusResponse
    SymptomLogCreateMinimal:
      properties:
        symptom_name:
          type: string
          minLength: 1
          title: Symptom Name
        severity:
          type: string
          minLength: 1
          title: Severity
          description: 'Severity level: one of none|mild|moderate|severe|critical
            (case-insensitive)'
        started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started At
        duration_minutes:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Duration Minutes
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        impact_rating:
          anyOf:
          - type: integer
            maximum: 5.0
            minimum: 1.0
          - type: 'null'
          title: Impact Rating
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
      type: object
      required:
      - symptom_name
      - severity
      title: SymptomLogCreateMinimal
    SymptomLogResponseMinimal:
      properties:
        id:
          type: integer
          title: Id
        user_id:
          type: string
          title: User Id
        symptom_name:
          type: string
          title: Symptom Name
        severity:
          type: string
          title: Severity
        started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started At
        duration_minutes:
          anyOf:
          - type: integer
          - type: 'null'
          title: Duration Minutes
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        impact_rating:
          anyOf:
          - type: integer
          - type: 'null'
          title: Impact Rating
        notes:
          anyOf:
          - type: string
          - type: 'null'
          title: Notes
        logged_at:
          type: string
          format: date-time
          title: Logged At
      type: object
      required:
      - id
      - user_id
      - symptom_name
      - severity
      - logged_at
      title: SymptomLogResponseMinimal
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ValidationErrorResponse:
      properties:
        detail:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Detail
          description: List of validation errors
      type: object
      required:
      - detail
      title: ValidationErrorResponse
      description: Validation error response schema.
    app__api__auth__login__UserPublic:
      properties:
        id:
          type: string
          title: Id
        email:
          type: string
          format: email
          title: Email
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
      type: object
      required:
      - id
      - email
      title: UserPublic
    app__api__auth__login__UserResponse:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/app__api__auth__login__UserPublic'
          - type: 'null'
        error:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Error
      type: object
      title: UserResponse
    app__api__auth__register__UserPublic:
      properties:
        id:
          type: string
          title: Id
        email:
          type: string
          format: email
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      type: object
      required:
      - id
      - email
      title: UserPublic
    app__api__auth__register__UserResponse:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/app__api__auth__register__UserPublic'
          - type: 'null'
        error:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Error
      type: object
      title: UserResponse
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
