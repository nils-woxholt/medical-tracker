[project]
name = "medical-tracker-backend"
version = "0.1.0"
description = "FastAPI backend for SaaS medical tracker"
authors = [
    {name = "Medical Tracker Team", email = "team@medicaltracker.example.com"}
]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlmodel>=0.0.14",
    "pydantic>=2.5.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "alembic>=1.13.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "psycopg2-binary>=2.9.7", # PostgreSQL adapter
    "aiosqlite>=0.19.0", # Async SQLite adapter
    "asyncpg>=0.28.0", # Async PostgreSQL adapter
    "passlib[bcrypt]>=1.7.4", # Password hashing
    "email-validator>=2.0.0", # Email validation for Pydantic
    "pydantic-settings>=2.0.0", # Pydantic settings
]

[project.optional-dependencies]
# Development extras: testing, linting, typing
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    # Pin httpx below 0.28 to retain deprecated AsyncClient(app=...) signature used in contract tests
    "httpx>=0.27.0,<0.28.0",
    "ruff>=0.6.5",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]

# Additional test tooling (contract / schema fuzzing etc.)
test = [
    "schemathesis>=3.19.0",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["app*"]
exclude = ["alembic*", "tests*"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=app --cov-report=term-missing --cov-fail-under=80"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/alembic/*",
]

# Removed [dependency-groups] duplication to avoid confusion with uv; rely on optional-dependencies extras only.

