@baseUrl = http://localhost:8000/api/v1
@authBase = http://localhost:8000/auth
@demoEmail = http_test_user_demo@example.com
@password = StrongPass123!!

### Health Check
GET {{baseUrl}}/health
Accept: application/json

### Register (Cookie Session - Lean Mode)
# IMPORTANT: Use unversioned /auth/register. The versioned /api/v1/auth/register intentionally returns 501 Not Implemented for legacy contract tests.
# Sets HTTP-only 'session' cookie whose value is the session ID.
POST {{authBase}}/register
Content-Type: application/json

{
  "email": "{{demoEmail}}",
  "password": "{{password}}",
  "display_name": "HTTP Test User"
}

### Login (Refresh session cookie)
# Unversioned /auth/login issues 'session' cookie (value=session ID); response envelope { data: { id, email, display_name? } }.
POST {{authBase}}/login
Content-Type: application/json

{
  "email": "{{demoEmail}}",
  "password": "{{password}}"
}

### Current Identity (/auth/me)
# Uses 'session' cookie from prior request. Expect 200 with user data or 401 unauthenticated.
GET {{authBase}}/me
Accept: application/json

### Create Symptom Type
# Requires authenticated cookie. Adjust name to avoid duplicates.
# baseUrl already includes /api/v1 so do NOT repeat it.
POST {{baseUrl}}/symptom-types
Content-Type: application/json

{
  "name": "Headache demo",
  "description": "Pulsating headache logged via REST client",
  "default_severity_numeric": 6,
  "default_impact_numeric": 5,
  "active": true
}

### List Symptom Types
GET {{baseUrl}}/symptom-types?limit=5
Accept: application/json

### Create Symptom Log
# Needs an existing symptom type ID; run list above and copy one.
# Required fields: symptom_type_id (int), started_at (ISO8601), severity_numeric, impact_numeric.
POST {{baseUrl}}/symptom-logs
Content-Type: application/json

{
  "symptom_type_id": 1,
  "started_at": "2025-10-30T12:07:00Z",
  "severity_numeric": 3,
  "impact_numeric": 4,
  "notes": "Logged via REST client"
}

### Medication Log (sample)
# Uses session cookie auth via fallback dependency (Bearer token optional, cookie sufficient).
POST {{baseUrl}}/logs/medications
Content-Type: application/json

{
  "medication_name": "Ibuprofen",
  "dosage": "200mg",
  "taken_at": "2025-10-30T12:00:00Z",
  "notes": "REST client test"
}

### Metrics (authenticated may be required for some data)
GET {{baseUrl}}/metrics
Accept: text/plain

### Create Medication (master data)
# Creates a new active medication. 'name' must be unique (min length 2). 'description' optional.
POST {{baseUrl}}/medications
Content-Type: application/json

{
  "name": "Ibuprofen Demo",
  "description": "Demo medication created via REST client",
  "is_active": true
}

### List Medications (paginated)
# Optional query params: page, per_page, search, active_only (default true)
GET {{baseUrl}}/medications?page=1&per_page=10&active_only=true
Accept: application/json

### Logout (placeholder - may return 404 if not implemented yet)
POST {{authBase}}/logout

### NOTES
# 1. Use the VS Code REST Client extension (humao.rest-client).
# 2. Cookie key is 'session' (value = session ID). Earlier docs may say session_id; use 'session'.
# 3. Cookie flows only through unversioned /auth endpoints; /api/v1/auth/register returns 501 by design.
# 4. Ensure 'Persist Cookies' is enabled so /auth/login sets the session cookie for subsequent protected requests.
# 5. Replace REPLACE_WITH_TYPE_ID after creating a symptom type.
# 6. {{timestamp}} variable is provided by REST Client; if unavailable, manually replace with current epoch.
