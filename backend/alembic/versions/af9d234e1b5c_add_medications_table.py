"""Add medications table with indexes

Revision ID: af9d234e1b5c
Revises: 7b1c2d9f2e01
Create Date: 2025-01-27 10:00:00.000000

Adjusted down_revision to include newly added users table migration.
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import func


# revision identifiers, used by Alembic.
revision = 'af9d234e1b5c'
down_revision = '7b1c2d9f2e01'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create medications table with unique constraint included
    op.create_table('medications',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=func.now()),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, server_default=func.now()),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', name='uq_medications_name')
    )
    
    # Create indexes for performance
    # Index for active medication queries (most common use case)
    op.create_index('ix_medications_active', 'medications', ['is_active'])
    
    # Composite index for active medication searches by name
    op.create_index('ix_medications_active_name', 'medications', ['is_active', 'name'])
    
    # Index for created_at for audit and sorting
    op.create_index('ix_medications_created_at', 'medications', ['created_at'])
    
    # Index for updated_at for audit and sorting  
    op.create_index('ix_medications_updated_at', 'medications', ['updated_at'])
    
    # Add some default medications for testing
    # Use compatible datetime function for SQLite
    op.execute("""
        INSERT INTO medications (name, description, is_active, created_at, updated_at) VALUES
        ('Aspirin', 'Pain reliever and anti-inflammatory medication', 1, datetime('now'), datetime('now')),
        ('Vitamin D', 'Daily vitamin supplement for bone health', 1, datetime('now'), datetime('now')),
        ('Ibuprofen', 'Nonsteroidal anti-inflammatory drug (NSAID)', 1, datetime('now'), datetime('now')),
        ('Acetaminophen', 'Pain reliever and fever reducer', 1, datetime('now'), datetime('now')),
        ('Multivitamin', 'Daily multivitamin supplement', 1, datetime('now'), datetime('now'))
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes
    op.drop_index('ix_medications_updated_at', table_name='medications')
    op.drop_index('ix_medications_created_at', table_name='medications')  
    op.drop_index('ix_medications_active_name', table_name='medications')
    op.drop_index('ix_medications_active', table_name='medications')
    
    # Drop table (this will also drop the unique constraint)
    op.drop_table('medications')
    # ### end Alembic commands ###